{
  "resourceType": "TestScript",
  "id": "testscript-example-history",
  "url": "http://hl7.org/fhir/TestScript/testscript-example-history",
  "identifier": {
    "system": "urn:ietf:rfc:3986",
    "value": "urn:oid:1.3.6.1.4.1.21367.2005.3.7.9877"
  },
  "version": "1.0",
  "name": "TestScript Example History",
  "status": "draft",
  "experimental": true,
  "date": "2017-01-18",
  "publisher": "HL7",
  "contact": [
    {
      "name": "Support",
      "telecom": [
        {
          "system": "email",
          "value": "support@HL7.org",
          "use": "work"
        }
      ]
    }
  ],
  "description": "TestScript example resource with setup to delete if present and create a new instance of a Patient then update that Patient to create a minimum history; and single test definition to get the history of that Patient with various asserts.",
  "jurisdiction": [
    {
      "coding": [
        {
          "system": "urn:iso:std:iso:3166",
          "code": "US",
          "display": "United States of America (the)"
        }
      ]
    }
  ],
  "purpose": "Patient (Conditional) Create, Update, Delete and History (Instance) Operations",
  "copyright": "Â© HL7.org 2011+",
  "metadata": {
    "link": [
      {
        "url": "http://hl7.org/fhir/patient.html",
        "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services."
      }
    ],
    "capability": [
      {
        "required": true,
        "validated": false,
        "description": "Patient Update, Delete and History (Instance) Operations",
        "link": [
          "http://hl7.org/fhir/http.html#update",
          "http://hl7.org/fhir/http.html#delete",
          "http://hl7.org/fhir/http.html#history"
        ],
        "capabilities": "CapabilityStatement/example"
      }
    ]
  },
  "fixture": [
    {
      "id": "fixture-patient-create",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "Patient/example",
        "display": "Peter Chalmers"
      }
    },
    {
      "id": "fixture-patient-update",
      "autocreate": false,
      "autodelete": false,
      "resource": {
        "reference": "Patient/pat1",
        "display": "Donald Duck"
      }
    }
  ],
  "profile": [
    {
      "id": "bundle-profile",
      "reference": "http://hl7.org/fhir/StructureDefinition/Bundle"
    }
  ],
  "variable": [
    {
      "name": "createResourceId",
      "path": "Patient/id",
      "sourceId": "fixture-patient-create"
    }
  ],
  "setup": {
    "action": [
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "delete"
          },
          "resource": "Patient",
          "label": "SetupDeletePatient",
          "description": "Execute a delete operation to insure the patient does not exist on the server.",
          "accept": "json",
          "encodeRequestUrl": true,
          "params": "/${createResourceId}"
        }
      },
      {
        "assert": {
          "description": "Confirm that the returned HTTP status is 200(OK) or 204(No Content).",
          "direction": "response",
          "operator": "in",
          "responseCode": "200,204",
          "warningOnly": false
        }
      },
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "update"
          },
          "resource": "Patient",
          "label": "SetupCreatePatient",
          "description": "Create patient resource on test server using the contents of fixture-patient-create",
          "accept": "json",
          "contentType": "json",
          "encodeRequestUrl": true,
          "params": "/${createResourceId}",
          "sourceId": "fixture-patient-create"
        }
      },
      {
        "assert": {
          "description": "Confirm that the returned HTTP status is 201(Created).",
          "direction": "response",
          "responseCode": "201",
          "warningOnly": false
        }
      },
      {
        "operation": {
          "type": {
            "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
            "code": "update"
          },
          "resource": "Patient",
          "label": "SetupUpdatePatient",
          "description": "Update patient resource on test server using the contents of fixture-patient-update",
          "accept": "json",
          "contentType": "json",
          "encodeRequestUrl": true,
          "params": "/${createResourceId}",
          "sourceId": "fixture-patient-update"
        }
      },
      {
        "assert": {
          "description": "Confirm that the returned HTTP status is 200(OK).",
          "direction": "response",
          "responseCode": "200",
          "warningOnly": false
        }
      }
    ]
  },
  "test": [
    {
      "id": "01-HistoryPatient",
      "name": "History Patient",
      "description": "Get the history for a known Patient and validate response.",
      "action": [
        {
          "operation": {
            "type": {
              "system": "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
              "code": "history"
            },
            "resource": "Patient",
            "description": "Get the Patient history on the test server using the id from fixture-patient-create.",
            "accept": "json",
            "contentType": "json",
            "encodeRequestUrl": true,
            "targetId": "fixture-patient-create"
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned HTTP status is 200(OK).",
            "direction": "response",
            "response": "okay",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned resource type is Bundle.",
            "resource": "Bundle",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned Bundle conforms to the base FHIR specification.",
            "validateProfileId": "bundle-profile",
            "warningOnly": false
          }
        },
        {
          "assert": {
            "description": "Confirm that the returned Bundle type equals 'history'.",
            "operator": "equals",
            "path": "fhir:Bundle/fhir:type/@value",
            "value": "history",
            "warningOnly": false
          }
        }
      ]
    }
  ]
}